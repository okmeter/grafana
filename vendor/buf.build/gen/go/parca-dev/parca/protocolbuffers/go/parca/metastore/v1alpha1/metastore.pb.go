// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        (unknown)
// source: parca/metastore/v1alpha1/metastore.proto

package metastorev1alpha1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetOrCreateMappingsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mappings []*Mapping `protobuf:"bytes,1,rep,name=mappings,proto3" json:"mappings,omitempty"`
}

func (x *GetOrCreateMappingsRequest) Reset() {
	*x = GetOrCreateMappingsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_parca_metastore_v1alpha1_metastore_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOrCreateMappingsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrCreateMappingsRequest) ProtoMessage() {}

func (x *GetOrCreateMappingsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_parca_metastore_v1alpha1_metastore_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrCreateMappingsRequest.ProtoReflect.Descriptor instead.
func (*GetOrCreateMappingsRequest) Descriptor() ([]byte, []int) {
	return file_parca_metastore_v1alpha1_metastore_proto_rawDescGZIP(), []int{0}
}

func (x *GetOrCreateMappingsRequest) GetMappings() []*Mapping {
	if x != nil {
		return x.Mappings
	}
	return nil
}

type GetOrCreateMappingsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mappings []*Mapping `protobuf:"bytes,1,rep,name=mappings,proto3" json:"mappings,omitempty"`
}

func (x *GetOrCreateMappingsResponse) Reset() {
	*x = GetOrCreateMappingsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_parca_metastore_v1alpha1_metastore_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOrCreateMappingsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrCreateMappingsResponse) ProtoMessage() {}

func (x *GetOrCreateMappingsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_parca_metastore_v1alpha1_metastore_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrCreateMappingsResponse.ProtoReflect.Descriptor instead.
func (*GetOrCreateMappingsResponse) Descriptor() ([]byte, []int) {
	return file_parca_metastore_v1alpha1_metastore_proto_rawDescGZIP(), []int{1}
}

func (x *GetOrCreateMappingsResponse) GetMappings() []*Mapping {
	if x != nil {
		return x.Mappings
	}
	return nil
}

type GetOrCreateFunctionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Functions []*Function `protobuf:"bytes,1,rep,name=functions,proto3" json:"functions,omitempty"`
}

func (x *GetOrCreateFunctionsRequest) Reset() {
	*x = GetOrCreateFunctionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_parca_metastore_v1alpha1_metastore_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOrCreateFunctionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrCreateFunctionsRequest) ProtoMessage() {}

func (x *GetOrCreateFunctionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_parca_metastore_v1alpha1_metastore_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrCreateFunctionsRequest.ProtoReflect.Descriptor instead.
func (*GetOrCreateFunctionsRequest) Descriptor() ([]byte, []int) {
	return file_parca_metastore_v1alpha1_metastore_proto_rawDescGZIP(), []int{2}
}

func (x *GetOrCreateFunctionsRequest) GetFunctions() []*Function {
	if x != nil {
		return x.Functions
	}
	return nil
}

type GetOrCreateFunctionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Functions []*Function `protobuf:"bytes,1,rep,name=functions,proto3" json:"functions,omitempty"`
}

func (x *GetOrCreateFunctionsResponse) Reset() {
	*x = GetOrCreateFunctionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_parca_metastore_v1alpha1_metastore_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOrCreateFunctionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrCreateFunctionsResponse) ProtoMessage() {}

func (x *GetOrCreateFunctionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_parca_metastore_v1alpha1_metastore_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrCreateFunctionsResponse.ProtoReflect.Descriptor instead.
func (*GetOrCreateFunctionsResponse) Descriptor() ([]byte, []int) {
	return file_parca_metastore_v1alpha1_metastore_proto_rawDescGZIP(), []int{3}
}

func (x *GetOrCreateFunctionsResponse) GetFunctions() []*Function {
	if x != nil {
		return x.Functions
	}
	return nil
}

type GetOrCreateLocationsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Locations []*Location `protobuf:"bytes,1,rep,name=locations,proto3" json:"locations,omitempty"`
}

func (x *GetOrCreateLocationsRequest) Reset() {
	*x = GetOrCreateLocationsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_parca_metastore_v1alpha1_metastore_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOrCreateLocationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrCreateLocationsRequest) ProtoMessage() {}

func (x *GetOrCreateLocationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_parca_metastore_v1alpha1_metastore_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrCreateLocationsRequest.ProtoReflect.Descriptor instead.
func (*GetOrCreateLocationsRequest) Descriptor() ([]byte, []int) {
	return file_parca_metastore_v1alpha1_metastore_proto_rawDescGZIP(), []int{4}
}

func (x *GetOrCreateLocationsRequest) GetLocations() []*Location {
	if x != nil {
		return x.Locations
	}
	return nil
}

type GetOrCreateLocationsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Locations []*Location `protobuf:"bytes,1,rep,name=locations,proto3" json:"locations,omitempty"`
}

func (x *GetOrCreateLocationsResponse) Reset() {
	*x = GetOrCreateLocationsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_parca_metastore_v1alpha1_metastore_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOrCreateLocationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrCreateLocationsResponse) ProtoMessage() {}

func (x *GetOrCreateLocationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_parca_metastore_v1alpha1_metastore_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrCreateLocationsResponse.ProtoReflect.Descriptor instead.
func (*GetOrCreateLocationsResponse) Descriptor() ([]byte, []int) {
	return file_parca_metastore_v1alpha1_metastore_proto_rawDescGZIP(), []int{5}
}

func (x *GetOrCreateLocationsResponse) GetLocations() []*Location {
	if x != nil {
		return x.Locations
	}
	return nil
}

type GetOrCreateStacktracesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Stacktraces []*Stacktrace `protobuf:"bytes,1,rep,name=stacktraces,proto3" json:"stacktraces,omitempty"`
}

func (x *GetOrCreateStacktracesRequest) Reset() {
	*x = GetOrCreateStacktracesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_parca_metastore_v1alpha1_metastore_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOrCreateStacktracesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrCreateStacktracesRequest) ProtoMessage() {}

func (x *GetOrCreateStacktracesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_parca_metastore_v1alpha1_metastore_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrCreateStacktracesRequest.ProtoReflect.Descriptor instead.
func (*GetOrCreateStacktracesRequest) Descriptor() ([]byte, []int) {
	return file_parca_metastore_v1alpha1_metastore_proto_rawDescGZIP(), []int{6}
}

func (x *GetOrCreateStacktracesRequest) GetStacktraces() []*Stacktrace {
	if x != nil {
		return x.Stacktraces
	}
	return nil
}

type GetOrCreateStacktracesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Stacktraces []*Stacktrace `protobuf:"bytes,1,rep,name=stacktraces,proto3" json:"stacktraces,omitempty"`
}

func (x *GetOrCreateStacktracesResponse) Reset() {
	*x = GetOrCreateStacktracesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_parca_metastore_v1alpha1_metastore_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOrCreateStacktracesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrCreateStacktracesResponse) ProtoMessage() {}

func (x *GetOrCreateStacktracesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_parca_metastore_v1alpha1_metastore_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrCreateStacktracesResponse.ProtoReflect.Descriptor instead.
func (*GetOrCreateStacktracesResponse) Descriptor() ([]byte, []int) {
	return file_parca_metastore_v1alpha1_metastore_proto_rawDescGZIP(), []int{7}
}

func (x *GetOrCreateStacktracesResponse) GetStacktraces() []*Stacktrace {
	if x != nil {
		return x.Stacktraces
	}
	return nil
}

type UnsymbolizedLocationsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Limit  uint32 `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	MinKey string `protobuf:"bytes,2,opt,name=min_key,json=minKey,proto3" json:"min_key,omitempty"`
}

func (x *UnsymbolizedLocationsRequest) Reset() {
	*x = UnsymbolizedLocationsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_parca_metastore_v1alpha1_metastore_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnsymbolizedLocationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnsymbolizedLocationsRequest) ProtoMessage() {}

func (x *UnsymbolizedLocationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_parca_metastore_v1alpha1_metastore_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnsymbolizedLocationsRequest.ProtoReflect.Descriptor instead.
func (*UnsymbolizedLocationsRequest) Descriptor() ([]byte, []int) {
	return file_parca_metastore_v1alpha1_metastore_proto_rawDescGZIP(), []int{8}
}

func (x *UnsymbolizedLocationsRequest) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *UnsymbolizedLocationsRequest) GetMinKey() string {
	if x != nil {
		return x.MinKey
	}
	return ""
}

type UnsymbolizedLocationsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Locations []*Location `protobuf:"bytes,1,rep,name=locations,proto3" json:"locations,omitempty"`
	MaxKey    string      `protobuf:"bytes,2,opt,name=max_key,json=maxKey,proto3" json:"max_key,omitempty"`
}

func (x *UnsymbolizedLocationsResponse) Reset() {
	*x = UnsymbolizedLocationsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_parca_metastore_v1alpha1_metastore_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnsymbolizedLocationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnsymbolizedLocationsResponse) ProtoMessage() {}

func (x *UnsymbolizedLocationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_parca_metastore_v1alpha1_metastore_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnsymbolizedLocationsResponse.ProtoReflect.Descriptor instead.
func (*UnsymbolizedLocationsResponse) Descriptor() ([]byte, []int) {
	return file_parca_metastore_v1alpha1_metastore_proto_rawDescGZIP(), []int{9}
}

func (x *UnsymbolizedLocationsResponse) GetLocations() []*Location {
	if x != nil {
		return x.Locations
	}
	return nil
}

func (x *UnsymbolizedLocationsResponse) GetMaxKey() string {
	if x != nil {
		return x.MaxKey
	}
	return ""
}

type CreateLocationLinesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Locations []*Location `protobuf:"bytes,1,rep,name=locations,proto3" json:"locations,omitempty"`
}

func (x *CreateLocationLinesRequest) Reset() {
	*x = CreateLocationLinesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_parca_metastore_v1alpha1_metastore_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateLocationLinesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateLocationLinesRequest) ProtoMessage() {}

func (x *CreateLocationLinesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_parca_metastore_v1alpha1_metastore_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateLocationLinesRequest.ProtoReflect.Descriptor instead.
func (*CreateLocationLinesRequest) Descriptor() ([]byte, []int) {
	return file_parca_metastore_v1alpha1_metastore_proto_rawDescGZIP(), []int{10}
}

func (x *CreateLocationLinesRequest) GetLocations() []*Location {
	if x != nil {
		return x.Locations
	}
	return nil
}

type CreateLocationLinesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateLocationLinesResponse) Reset() {
	*x = CreateLocationLinesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_parca_metastore_v1alpha1_metastore_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateLocationLinesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateLocationLinesResponse) ProtoMessage() {}

func (x *CreateLocationLinesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_parca_metastore_v1alpha1_metastore_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateLocationLinesResponse.ProtoReflect.Descriptor instead.
func (*CreateLocationLinesResponse) Descriptor() ([]byte, []int) {
	return file_parca_metastore_v1alpha1_metastore_proto_rawDescGZIP(), []int{11}
}

type StacktracesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StacktraceIds []string `protobuf:"bytes,1,rep,name=stacktrace_ids,json=stacktraceIds,proto3" json:"stacktrace_ids,omitempty"`
}

func (x *StacktracesRequest) Reset() {
	*x = StacktracesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_parca_metastore_v1alpha1_metastore_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StacktracesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StacktracesRequest) ProtoMessage() {}

func (x *StacktracesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_parca_metastore_v1alpha1_metastore_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StacktracesRequest.ProtoReflect.Descriptor instead.
func (*StacktracesRequest) Descriptor() ([]byte, []int) {
	return file_parca_metastore_v1alpha1_metastore_proto_rawDescGZIP(), []int{12}
}

func (x *StacktracesRequest) GetStacktraceIds() []string {
	if x != nil {
		return x.StacktraceIds
	}
	return nil
}

type StacktracesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Stacktraces []*Stacktrace `protobuf:"bytes,1,rep,name=stacktraces,proto3" json:"stacktraces,omitempty"`
}

func (x *StacktracesResponse) Reset() {
	*x = StacktracesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_parca_metastore_v1alpha1_metastore_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StacktracesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StacktracesResponse) ProtoMessage() {}

func (x *StacktracesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_parca_metastore_v1alpha1_metastore_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StacktracesResponse.ProtoReflect.Descriptor instead.
func (*StacktracesResponse) Descriptor() ([]byte, []int) {
	return file_parca_metastore_v1alpha1_metastore_proto_rawDescGZIP(), []int{13}
}

func (x *StacktracesResponse) GetStacktraces() []*Stacktrace {
	if x != nil {
		return x.Stacktraces
	}
	return nil
}

type LocationsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LocationIds []string `protobuf:"bytes,1,rep,name=location_ids,json=locationIds,proto3" json:"location_ids,omitempty"`
}

func (x *LocationsRequest) Reset() {
	*x = LocationsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_parca_metastore_v1alpha1_metastore_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LocationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocationsRequest) ProtoMessage() {}

func (x *LocationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_parca_metastore_v1alpha1_metastore_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocationsRequest.ProtoReflect.Descriptor instead.
func (*LocationsRequest) Descriptor() ([]byte, []int) {
	return file_parca_metastore_v1alpha1_metastore_proto_rawDescGZIP(), []int{14}
}

func (x *LocationsRequest) GetLocationIds() []string {
	if x != nil {
		return x.LocationIds
	}
	return nil
}

type LocationsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Locations []*Location `protobuf:"bytes,1,rep,name=locations,proto3" json:"locations,omitempty"`
}

func (x *LocationsResponse) Reset() {
	*x = LocationsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_parca_metastore_v1alpha1_metastore_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LocationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocationsResponse) ProtoMessage() {}

func (x *LocationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_parca_metastore_v1alpha1_metastore_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocationsResponse.ProtoReflect.Descriptor instead.
func (*LocationsResponse) Descriptor() ([]byte, []int) {
	return file_parca_metastore_v1alpha1_metastore_proto_rawDescGZIP(), []int{15}
}

func (x *LocationsResponse) GetLocations() []*Location {
	if x != nil {
		return x.Locations
	}
	return nil
}

type LocationLinesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LocationIds []string `protobuf:"bytes,1,rep,name=location_ids,json=locationIds,proto3" json:"location_ids,omitempty"`
}

func (x *LocationLinesRequest) Reset() {
	*x = LocationLinesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_parca_metastore_v1alpha1_metastore_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LocationLinesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocationLinesRequest) ProtoMessage() {}

func (x *LocationLinesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_parca_metastore_v1alpha1_metastore_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocationLinesRequest.ProtoReflect.Descriptor instead.
func (*LocationLinesRequest) Descriptor() ([]byte, []int) {
	return file_parca_metastore_v1alpha1_metastore_proto_rawDescGZIP(), []int{16}
}

func (x *LocationLinesRequest) GetLocationIds() []string {
	if x != nil {
		return x.LocationIds
	}
	return nil
}

type FunctionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FunctionIds []string `protobuf:"bytes,1,rep,name=function_ids,json=functionIds,proto3" json:"function_ids,omitempty"`
}

func (x *FunctionsRequest) Reset() {
	*x = FunctionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_parca_metastore_v1alpha1_metastore_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FunctionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FunctionsRequest) ProtoMessage() {}

func (x *FunctionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_parca_metastore_v1alpha1_metastore_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FunctionsRequest.ProtoReflect.Descriptor instead.
func (*FunctionsRequest) Descriptor() ([]byte, []int) {
	return file_parca_metastore_v1alpha1_metastore_proto_rawDescGZIP(), []int{17}
}

func (x *FunctionsRequest) GetFunctionIds() []string {
	if x != nil {
		return x.FunctionIds
	}
	return nil
}

type FunctionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Functions []*Function `protobuf:"bytes,1,rep,name=functions,proto3" json:"functions,omitempty"`
}

func (x *FunctionsResponse) Reset() {
	*x = FunctionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_parca_metastore_v1alpha1_metastore_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FunctionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FunctionsResponse) ProtoMessage() {}

func (x *FunctionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_parca_metastore_v1alpha1_metastore_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FunctionsResponse.ProtoReflect.Descriptor instead.
func (*FunctionsResponse) Descriptor() ([]byte, []int) {
	return file_parca_metastore_v1alpha1_metastore_proto_rawDescGZIP(), []int{18}
}

func (x *FunctionsResponse) GetFunctions() []*Function {
	if x != nil {
		return x.Functions
	}
	return nil
}

type MappingsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MappingIds []string `protobuf:"bytes,1,rep,name=mapping_ids,json=mappingIds,proto3" json:"mapping_ids,omitempty"`
}

func (x *MappingsRequest) Reset() {
	*x = MappingsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_parca_metastore_v1alpha1_metastore_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MappingsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MappingsRequest) ProtoMessage() {}

func (x *MappingsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_parca_metastore_v1alpha1_metastore_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MappingsRequest.ProtoReflect.Descriptor instead.
func (*MappingsRequest) Descriptor() ([]byte, []int) {
	return file_parca_metastore_v1alpha1_metastore_proto_rawDescGZIP(), []int{19}
}

func (x *MappingsRequest) GetMappingIds() []string {
	if x != nil {
		return x.MappingIds
	}
	return nil
}

type MappingsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mappings []*Mapping `protobuf:"bytes,1,rep,name=mappings,proto3" json:"mappings,omitempty"`
}

func (x *MappingsResponse) Reset() {
	*x = MappingsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_parca_metastore_v1alpha1_metastore_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MappingsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MappingsResponse) ProtoMessage() {}

func (x *MappingsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_parca_metastore_v1alpha1_metastore_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MappingsResponse.ProtoReflect.Descriptor instead.
func (*MappingsResponse) Descriptor() ([]byte, []int) {
	return file_parca_metastore_v1alpha1_metastore_proto_rawDescGZIP(), []int{20}
}

func (x *MappingsResponse) GetMappings() []*Mapping {
	if x != nil {
		return x.Mappings
	}
	return nil
}

type Sample struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StacktraceId string                     `protobuf:"bytes,1,opt,name=stacktrace_id,json=stacktraceId,proto3" json:"stacktrace_id,omitempty"`
	Labels       map[string]*SampleLabel    `protobuf:"bytes,2,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	NumLabels    map[string]*SampleNumLabel `protobuf:"bytes,3,rep,name=num_labels,json=numLabels,proto3" json:"num_labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	NumUnits     map[string]*SampleNumUnit  `protobuf:"bytes,4,rep,name=num_units,json=numUnits,proto3" json:"num_units,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Sample) Reset() {
	*x = Sample{}
	if protoimpl.UnsafeEnabled {
		mi := &file_parca_metastore_v1alpha1_metastore_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Sample) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Sample) ProtoMessage() {}

func (x *Sample) ProtoReflect() protoreflect.Message {
	mi := &file_parca_metastore_v1alpha1_metastore_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Sample.ProtoReflect.Descriptor instead.
func (*Sample) Descriptor() ([]byte, []int) {
	return file_parca_metastore_v1alpha1_metastore_proto_rawDescGZIP(), []int{21}
}

func (x *Sample) GetStacktraceId() string {
	if x != nil {
		return x.StacktraceId
	}
	return ""
}

func (x *Sample) GetLabels() map[string]*SampleLabel {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *Sample) GetNumLabels() map[string]*SampleNumLabel {
	if x != nil {
		return x.NumLabels
	}
	return nil
}

func (x *Sample) GetNumUnits() map[string]*SampleNumUnit {
	if x != nil {
		return x.NumUnits
	}
	return nil
}

type Stacktrace struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	LocationIds []string `protobuf:"bytes,2,rep,name=location_ids,json=locationIds,proto3" json:"location_ids,omitempty"`
}

func (x *Stacktrace) Reset() {
	*x = Stacktrace{}
	if protoimpl.UnsafeEnabled {
		mi := &file_parca_metastore_v1alpha1_metastore_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Stacktrace) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Stacktrace) ProtoMessage() {}

func (x *Stacktrace) ProtoReflect() protoreflect.Message {
	mi := &file_parca_metastore_v1alpha1_metastore_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Stacktrace.ProtoReflect.Descriptor instead.
func (*Stacktrace) Descriptor() ([]byte, []int) {
	return file_parca_metastore_v1alpha1_metastore_proto_rawDescGZIP(), []int{22}
}

func (x *Stacktrace) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Stacktrace) GetLocationIds() []string {
	if x != nil {
		return x.LocationIds
	}
	return nil
}

type SampleLabel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Labels []string `protobuf:"bytes,1,rep,name=labels,proto3" json:"labels,omitempty"`
}

func (x *SampleLabel) Reset() {
	*x = SampleLabel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_parca_metastore_v1alpha1_metastore_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SampleLabel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SampleLabel) ProtoMessage() {}

func (x *SampleLabel) ProtoReflect() protoreflect.Message {
	mi := &file_parca_metastore_v1alpha1_metastore_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SampleLabel.ProtoReflect.Descriptor instead.
func (*SampleLabel) Descriptor() ([]byte, []int) {
	return file_parca_metastore_v1alpha1_metastore_proto_rawDescGZIP(), []int{23}
}

func (x *SampleLabel) GetLabels() []string {
	if x != nil {
		return x.Labels
	}
	return nil
}

type SampleNumLabel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NumLabels []int64 `protobuf:"varint,1,rep,packed,name=num_labels,json=numLabels,proto3" json:"num_labels,omitempty"`
}

func (x *SampleNumLabel) Reset() {
	*x = SampleNumLabel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_parca_metastore_v1alpha1_metastore_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SampleNumLabel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SampleNumLabel) ProtoMessage() {}

func (x *SampleNumLabel) ProtoReflect() protoreflect.Message {
	mi := &file_parca_metastore_v1alpha1_metastore_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SampleNumLabel.ProtoReflect.Descriptor instead.
func (*SampleNumLabel) Descriptor() ([]byte, []int) {
	return file_parca_metastore_v1alpha1_metastore_proto_rawDescGZIP(), []int{24}
}

func (x *SampleNumLabel) GetNumLabels() []int64 {
	if x != nil {
		return x.NumLabels
	}
	return nil
}

type SampleNumUnit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Units []string `protobuf:"bytes,1,rep,name=units,proto3" json:"units,omitempty"`
}

func (x *SampleNumUnit) Reset() {
	*x = SampleNumUnit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_parca_metastore_v1alpha1_metastore_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SampleNumUnit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SampleNumUnit) ProtoMessage() {}

func (x *SampleNumUnit) ProtoReflect() protoreflect.Message {
	mi := &file_parca_metastore_v1alpha1_metastore_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SampleNumUnit.ProtoReflect.Descriptor instead.
func (*SampleNumUnit) Descriptor() ([]byte, []int) {
	return file_parca_metastore_v1alpha1_metastore_proto_rawDescGZIP(), []int{25}
}

func (x *SampleNumUnit) GetUnits() []string {
	if x != nil {
		return x.Units
	}
	return nil
}

type Location struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Address      uint64  `protobuf:"varint,2,opt,name=address,proto3" json:"address,omitempty"`
	MappingId    string  `protobuf:"bytes,4,opt,name=mapping_id,json=mappingId,proto3" json:"mapping_id,omitempty"`
	IsFolded     bool    `protobuf:"varint,5,opt,name=is_folded,json=isFolded,proto3" json:"is_folded,omitempty"`
	Lines        []*Line `protobuf:"bytes,6,rep,name=lines,proto3" json:"lines,omitempty"`
	MappingIndex uint32  `protobuf:"varint,7,opt,name=mapping_index,json=mappingIndex,proto3" json:"mapping_index,omitempty"`
}

func (x *Location) Reset() {
	*x = Location{}
	if protoimpl.UnsafeEnabled {
		mi := &file_parca_metastore_v1alpha1_metastore_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Location) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Location) ProtoMessage() {}

func (x *Location) ProtoReflect() protoreflect.Message {
	mi := &file_parca_metastore_v1alpha1_metastore_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Location.ProtoReflect.Descriptor instead.
func (*Location) Descriptor() ([]byte, []int) {
	return file_parca_metastore_v1alpha1_metastore_proto_rawDescGZIP(), []int{26}
}

func (x *Location) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Location) GetAddress() uint64 {
	if x != nil {
		return x.Address
	}
	return 0
}

func (x *Location) GetMappingId() string {
	if x != nil {
		return x.MappingId
	}
	return ""
}

func (x *Location) GetIsFolded() bool {
	if x != nil {
		return x.IsFolded
	}
	return false
}

func (x *Location) GetLines() []*Line {
	if x != nil {
		return x.Lines
	}
	return nil
}

func (x *Location) GetMappingIndex() uint32 {
	if x != nil {
		return x.MappingIndex
	}
	return 0
}

type Line struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FunctionId    string `protobuf:"bytes,1,opt,name=function_id,json=functionId,proto3" json:"function_id,omitempty"`
	Line          int64  `protobuf:"varint,2,opt,name=line,proto3" json:"line,omitempty"`
	FunctionIndex uint32 `protobuf:"varint,3,opt,name=function_index,json=functionIndex,proto3" json:"function_index,omitempty"`
}

func (x *Line) Reset() {
	*x = Line{}
	if protoimpl.UnsafeEnabled {
		mi := &file_parca_metastore_v1alpha1_metastore_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Line) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Line) ProtoMessage() {}

func (x *Line) ProtoReflect() protoreflect.Message {
	mi := &file_parca_metastore_v1alpha1_metastore_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Line.ProtoReflect.Descriptor instead.
func (*Line) Descriptor() ([]byte, []int) {
	return file_parca_metastore_v1alpha1_metastore_proto_rawDescGZIP(), []int{27}
}

func (x *Line) GetFunctionId() string {
	if x != nil {
		return x.FunctionId
	}
	return ""
}

func (x *Line) GetLine() int64 {
	if x != nil {
		return x.Line
	}
	return 0
}

func (x *Line) GetFunctionIndex() uint32 {
	if x != nil {
		return x.FunctionIndex
	}
	return 0
}

type Function struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                    string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	StartLine             int64  `protobuf:"varint,2,opt,name=start_line,json=startLine,proto3" json:"start_line,omitempty"`
	Name                  string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	SystemName            string `protobuf:"bytes,4,opt,name=system_name,json=systemName,proto3" json:"system_name,omitempty"`
	Filename              string `protobuf:"bytes,5,opt,name=filename,proto3" json:"filename,omitempty"`
	NameStringIndex       uint32 `protobuf:"varint,6,opt,name=name_string_index,json=nameStringIndex,proto3" json:"name_string_index,omitempty"`
	SystemNameStringIndex uint32 `protobuf:"varint,7,opt,name=system_name_string_index,json=systemNameStringIndex,proto3" json:"system_name_string_index,omitempty"`
	FilenameStringIndex   uint32 `protobuf:"varint,8,opt,name=filename_string_index,json=filenameStringIndex,proto3" json:"filename_string_index,omitempty"`
}

func (x *Function) Reset() {
	*x = Function{}
	if protoimpl.UnsafeEnabled {
		mi := &file_parca_metastore_v1alpha1_metastore_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Function) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Function) ProtoMessage() {}

func (x *Function) ProtoReflect() protoreflect.Message {
	mi := &file_parca_metastore_v1alpha1_metastore_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Function.ProtoReflect.Descriptor instead.
func (*Function) Descriptor() ([]byte, []int) {
	return file_parca_metastore_v1alpha1_metastore_proto_rawDescGZIP(), []int{28}
}

func (x *Function) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Function) GetStartLine() int64 {
	if x != nil {
		return x.StartLine
	}
	return 0
}

func (x *Function) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Function) GetSystemName() string {
	if x != nil {
		return x.SystemName
	}
	return ""
}

func (x *Function) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *Function) GetNameStringIndex() uint32 {
	if x != nil {
		return x.NameStringIndex
	}
	return 0
}

func (x *Function) GetSystemNameStringIndex() uint32 {
	if x != nil {
		return x.SystemNameStringIndex
	}
	return 0
}

func (x *Function) GetFilenameStringIndex() uint32 {
	if x != nil {
		return x.FilenameStringIndex
	}
	return 0
}

type Mapping struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                 string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Start              uint64 `protobuf:"varint,2,opt,name=start,proto3" json:"start,omitempty"`
	Limit              uint64 `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset             uint64 `protobuf:"varint,4,opt,name=offset,proto3" json:"offset,omitempty"`
	File               string `protobuf:"bytes,5,opt,name=file,proto3" json:"file,omitempty"`
	BuildId            string `protobuf:"bytes,6,opt,name=build_id,json=buildId,proto3" json:"build_id,omitempty"`
	HasFunctions       bool   `protobuf:"varint,7,opt,name=has_functions,json=hasFunctions,proto3" json:"has_functions,omitempty"`
	HasFilenames       bool   `protobuf:"varint,8,opt,name=has_filenames,json=hasFilenames,proto3" json:"has_filenames,omitempty"`
	HasLineNumbers     bool   `protobuf:"varint,9,opt,name=has_line_numbers,json=hasLineNumbers,proto3" json:"has_line_numbers,omitempty"`
	HasInlineFrames    bool   `protobuf:"varint,10,opt,name=has_inline_frames,json=hasInlineFrames,proto3" json:"has_inline_frames,omitempty"`
	FileStringIndex    uint32 `protobuf:"varint,11,opt,name=file_string_index,json=fileStringIndex,proto3" json:"file_string_index,omitempty"`
	BuildIdStringIndex uint32 `protobuf:"varint,12,opt,name=build_id_string_index,json=buildIdStringIndex,proto3" json:"build_id_string_index,omitempty"`
}

func (x *Mapping) Reset() {
	*x = Mapping{}
	if protoimpl.UnsafeEnabled {
		mi := &file_parca_metastore_v1alpha1_metastore_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Mapping) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Mapping) ProtoMessage() {}

func (x *Mapping) ProtoReflect() protoreflect.Message {
	mi := &file_parca_metastore_v1alpha1_metastore_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Mapping.ProtoReflect.Descriptor instead.
func (*Mapping) Descriptor() ([]byte, []int) {
	return file_parca_metastore_v1alpha1_metastore_proto_rawDescGZIP(), []int{29}
}

func (x *Mapping) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Mapping) GetStart() uint64 {
	if x != nil {
		return x.Start
	}
	return 0
}

func (x *Mapping) GetLimit() uint64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *Mapping) GetOffset() uint64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *Mapping) GetFile() string {
	if x != nil {
		return x.File
	}
	return ""
}

func (x *Mapping) GetBuildId() string {
	if x != nil {
		return x.BuildId
	}
	return ""
}

func (x *Mapping) GetHasFunctions() bool {
	if x != nil {
		return x.HasFunctions
	}
	return false
}

func (x *Mapping) GetHasFilenames() bool {
	if x != nil {
		return x.HasFilenames
	}
	return false
}

func (x *Mapping) GetHasLineNumbers() bool {
	if x != nil {
		return x.HasLineNumbers
	}
	return false
}

func (x *Mapping) GetHasInlineFrames() bool {
	if x != nil {
		return x.HasInlineFrames
	}
	return false
}

func (x *Mapping) GetFileStringIndex() uint32 {
	if x != nil {
		return x.FileStringIndex
	}
	return 0
}

func (x *Mapping) GetBuildIdStringIndex() uint32 {
	if x != nil {
		return x.BuildIdStringIndex
	}
	return 0
}

var File_parca_metastore_v1alpha1_metastore_proto protoreflect.FileDescriptor

var file_parca_metastore_v1alpha1_metastore_proto_rawDesc = []byte{
	0x0a, 0x28, 0x70, 0x61, 0x72, 0x63, 0x61, 0x2f, 0x6d, 0x65, 0x74, 0x61, 0x73, 0x74, 0x6f, 0x72,
	0x65, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x6d, 0x65, 0x74, 0x61, 0x73,
	0x74, 0x6f, 0x72, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x18, 0x70, 0x61, 0x72, 0x63,
	0x61, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0x22, 0x5b, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x3d, 0x0a, 0x08, 0x6d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x70, 0x61, 0x72, 0x63, 0x61, 0x2e, 0x6d, 0x65, 0x74,
	0x61, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e,
	0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x52, 0x08, 0x6d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67,
	0x73, 0x22, 0x5c, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x3d, 0x0a, 0x08, 0x6d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x21, 0x2e, 0x70, 0x61, 0x72, 0x63, 0x61, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x73,
	0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4d, 0x61,
	0x70, 0x70, 0x69, 0x6e, 0x67, 0x52, 0x08, 0x6d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x73, 0x22,
	0x5f, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x75,
	0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x40,
	0x0a, 0x09, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x22, 0x2e, 0x70, 0x61, 0x72, 0x63, 0x61, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x73, 0x74,
	0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x46, 0x75, 0x6e,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x22, 0x60, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46,
	0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x40, 0x0a, 0x09, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x70, 0x61, 0x72, 0x63, 0x61, 0x2e, 0x6d, 0x65, 0x74, 0x61,
	0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x46,
	0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x22, 0x5f, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x40, 0x0a, 0x09, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x70, 0x61, 0x72, 0x63, 0x61, 0x2e, 0x6d, 0x65, 0x74,
	0x61, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e,
	0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x22, 0x60, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x09, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x70, 0x61, 0x72, 0x63, 0x61, 0x2e, 0x6d,
	0x65, 0x74, 0x61, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x6c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x67, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x74, 0x72, 0x61, 0x63, 0x65, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x46, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x74,
	0x72, 0x61, 0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x70, 0x61,
	0x72, 0x63, 0x61, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x74, 0x72, 0x61, 0x63,
	0x65, 0x52, 0x0b, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x74, 0x72, 0x61, 0x63, 0x65, 0x73, 0x22, 0x68,
	0x0a, 0x1e, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61,
	0x63, 0x6b, 0x74, 0x72, 0x61, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x46, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x74, 0x72, 0x61, 0x63, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x70, 0x61, 0x72, 0x63, 0x61, 0x2e, 0x6d, 0x65,
	0x74, 0x61, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31,
	0x2e, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x74, 0x72, 0x61, 0x63, 0x65, 0x52, 0x0b, 0x73, 0x74, 0x61,
	0x63, 0x6b, 0x74, 0x72, 0x61, 0x63, 0x65, 0x73, 0x22, 0x4d, 0x0a, 0x1c, 0x55, 0x6e, 0x73, 0x79,
	0x6d, 0x62, 0x6f, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x17,
	0x0a, 0x07, 0x6d, 0x69, 0x6e, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x6d, 0x69, 0x6e, 0x4b, 0x65, 0x79, 0x22, 0x7a, 0x0a, 0x1d, 0x55, 0x6e, 0x73, 0x79, 0x6d,
	0x62, 0x6f, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x09, 0x6c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x70, 0x61,
	0x72, 0x63, 0x61, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x09, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x6d, 0x61,
	0x78, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x61, 0x78,
	0x4b, 0x65, 0x79, 0x22, 0x5e, 0x0a, 0x1a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x6e, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x40, 0x0a, 0x09, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x70, 0x61, 0x72, 0x63, 0x61, 0x2e, 0x6d, 0x65, 0x74,
	0x61, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e,
	0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x22, 0x1d, 0x0a, 0x1b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x6e, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x3b, 0x0a, 0x12, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x74, 0x72, 0x61, 0x63, 0x65,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x74, 0x61, 0x63,
	0x6b, 0x74, 0x72, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x0d, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x74, 0x72, 0x61, 0x63, 0x65, 0x49, 0x64, 0x73, 0x22,
	0x5d, 0x0a, 0x13, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x74, 0x72, 0x61, 0x63, 0x65, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x46, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x74,
	0x72, 0x61, 0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x70, 0x61,
	0x72, 0x63, 0x61, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x74, 0x72, 0x61, 0x63,
	0x65, 0x52, 0x0b, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x74, 0x72, 0x61, 0x63, 0x65, 0x73, 0x22, 0x35,
	0x0a, 0x10, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69,
	0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x73, 0x22, 0x55, 0x0a, 0x11, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x09, 0x6c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e,
	0x70, 0x61, 0x72, 0x63, 0x61, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x09, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x39, 0x0a, 0x14,
	0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x6e, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x6c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x73, 0x22, 0x35, 0x0a, 0x10, 0x46, 0x75, 0x6e, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x66,
	0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x0b, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x73, 0x22, 0x55,
	0x0a, 0x11, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x09, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x70, 0x61, 0x72, 0x63, 0x61, 0x2e, 0x6d,
	0x65, 0x74, 0x61, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x66, 0x75, 0x6e, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x32, 0x0a, 0x0f, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x61, 0x70, 0x70,
	0x69, 0x6e, 0x67, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x6d,
	0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x73, 0x22, 0x51, 0x0a, 0x10, 0x4d, 0x61, 0x70,
	0x70, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a,
	0x08, 0x6d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x21, 0x2e, 0x70, 0x61, 0x72, 0x63, 0x61, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x73, 0x74, 0x6f, 0x72,
	0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4d, 0x61, 0x70, 0x70, 0x69,
	0x6e, 0x67, 0x52, 0x08, 0x6d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x73, 0x22, 0xc0, 0x04, 0x0a,
	0x06, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x74, 0x61, 0x63, 0x6b,
	0x74, 0x72, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x73, 0x74, 0x61, 0x63, 0x6b, 0x74, 0x72, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x44, 0x0a, 0x06,
	0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x70,
	0x61, 0x72, 0x63, 0x61, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x4c,
	0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65,
	0x6c, 0x73, 0x12, 0x4e, 0x0a, 0x0a, 0x6e, 0x75, 0x6d, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x70, 0x61, 0x72, 0x63, 0x61, 0x2e, 0x6d,
	0x65, 0x74, 0x61, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0x2e, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x4e, 0x75, 0x6d, 0x4c, 0x61, 0x62, 0x65,
	0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x09, 0x6e, 0x75, 0x6d, 0x4c, 0x61, 0x62, 0x65,
	0x6c, 0x73, 0x12, 0x4b, 0x0a, 0x09, 0x6e, 0x75, 0x6d, 0x5f, 0x75, 0x6e, 0x69, 0x74, 0x73, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x70, 0x61, 0x72, 0x63, 0x61, 0x2e, 0x6d, 0x65,
	0x74, 0x61, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31,
	0x2e, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x4e, 0x75, 0x6d, 0x55, 0x6e, 0x69, 0x74, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x6e, 0x75, 0x6d, 0x55, 0x6e, 0x69, 0x74, 0x73, 0x1a,
	0x60, 0x0a, 0x0b, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x3b, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x25, 0x2e, 0x70, 0x61, 0x72, 0x63, 0x61, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x73, 0x74, 0x6f, 0x72,
	0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x53, 0x61, 0x6d, 0x70, 0x6c,
	0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x1a, 0x66, 0x0a, 0x0e, 0x4e, 0x75, 0x6d, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x3e, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x70, 0x61, 0x72, 0x63, 0x61, 0x2e, 0x6d, 0x65, 0x74,
	0x61, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e,
	0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x4e, 0x75, 0x6d, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x64, 0x0a, 0x0d, 0x4e, 0x75, 0x6d,
	0x55, 0x6e, 0x69, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x3d, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x70, 0x61,
	0x72, 0x63, 0x61, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x4e, 0x75, 0x6d,
	0x55, 0x6e, 0x69, 0x74, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22,
	0x3f, 0x0a, 0x0a, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x74, 0x72, 0x61, 0x63, 0x65, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x21, 0x0a,
	0x0c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x0b, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x73,
	0x22, 0x25, 0x0a, 0x0b, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x12,
	0x16, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x22, 0x2f, 0x0a, 0x0e, 0x53, 0x61, 0x6d, 0x70, 0x6c,
	0x65, 0x4e, 0x75, 0x6d, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x6e, 0x75, 0x6d,
	0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x09, 0x6e,
	0x75, 0x6d, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x22, 0x25, 0x0a, 0x0d, 0x53, 0x61, 0x6d, 0x70,
	0x6c, 0x65, 0x4e, 0x75, 0x6d, 0x55, 0x6e, 0x69, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x75, 0x6e, 0x69,
	0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x75, 0x6e, 0x69, 0x74, 0x73, 0x22,
	0xcb, 0x01, 0x0a, 0x08, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x61, 0x70, 0x70, 0x69, 0x6e,
	0x67, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x61, 0x70, 0x70,
	0x69, 0x6e, 0x67, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x66, 0x6f, 0x6c, 0x64,
	0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x46, 0x6f, 0x6c, 0x64,
	0x65, 0x64, 0x12, 0x34, 0x0a, 0x05, 0x6c, 0x69, 0x6e, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1e, 0x2e, 0x70, 0x61, 0x72, 0x63, 0x61, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x73, 0x74,
	0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4c, 0x69, 0x6e,
	0x65, 0x52, 0x05, 0x6c, 0x69, 0x6e, 0x65, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x6d, 0x61, 0x70, 0x70,
	0x69, 0x6e, 0x67, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0c, 0x6d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x22, 0x62, 0x0a,
	0x04, 0x4c, 0x69, 0x6e, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x66, 0x75, 0x6e, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x66, 0x75,
	0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0d, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x22, 0xa3, 0x02, 0x0a, 0x08, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d,
	0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x4c, 0x69, 0x6e, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2a,
	0x0a, 0x11, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x6e,
	0x64, 0x65, 0x78, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x6e, 0x61, 0x6d, 0x65, 0x53,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x37, 0x0a, 0x18, 0x73, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x15, 0x73, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x12, 0x32, 0x0a, 0x15, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x5f,
	0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x13, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x22, 0x8b, 0x03, 0x0a, 0x07, 0x4d, 0x61, 0x70, 0x70,
	0x69, 0x6e, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x62,
	0x75, 0x69, 0x6c, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62,
	0x75, 0x69, 0x6c, 0x64, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x68, 0x61, 0x73, 0x5f, 0x66, 0x75,
	0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x68,
	0x61, 0x73, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x68,
	0x61, 0x73, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0c, 0x68, 0x61, 0x73, 0x46, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x73,
	0x12, 0x28, 0x0a, 0x10, 0x68, 0x61, 0x73, 0x5f, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x6e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x68, 0x61, 0x73, 0x4c,
	0x69, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x12, 0x2a, 0x0a, 0x11, 0x68, 0x61,
	0x73, 0x5f, 0x69, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x68, 0x61, 0x73, 0x49, 0x6e, 0x6c, 0x69, 0x6e, 0x65,
	0x46, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x2a, 0x0a, 0x11, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x73,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0f, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x12, 0x31, 0x0a, 0x15, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x69, 0x64, 0x5f, 0x73,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x12, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x64, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x32, 0xf4, 0x09, 0x0a, 0x10, 0x4d, 0x65, 0x74, 0x61, 0x73, 0x74,
	0x6f, 0x72, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x84, 0x01, 0x0a, 0x13, 0x47,
	0x65, 0x74, 0x4f, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e,
	0x67, 0x73, 0x12, 0x34, 0x2e, 0x70, 0x61, 0x72, 0x63, 0x61, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x73,
	0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x4f, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e, 0x70, 0x61, 0x72, 0x63, 0x61,
	0x2e, 0x6d, 0x65, 0x74, 0x61, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d,
	0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x87, 0x01, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x35, 0x2e, 0x70, 0x61, 0x72,
	0x63, 0x61, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x36, 0x2e, 0x70, 0x61, 0x72, 0x63, 0x61, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x73, 0x74,
	0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x4f, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x87, 0x01, 0x0a, 0x14,
	0x47, 0x65, 0x74, 0x4f, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x12, 0x35, 0x2e, 0x70, 0x61, 0x72, 0x63, 0x61, 0x2e, 0x6d, 0x65, 0x74,
	0x61, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x4f, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x36, 0x2e, 0x70, 0x61,
	0x72, 0x63, 0x61, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x8d, 0x01, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x74, 0x72, 0x61, 0x63, 0x65, 0x73,
	0x12, 0x37, 0x2e, 0x70, 0x61, 0x72, 0x63, 0x61, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x73, 0x74, 0x6f,
	0x72, 0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4f,
	0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x74, 0x72, 0x61, 0x63,
	0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x38, 0x2e, 0x70, 0x61, 0x72, 0x63,
	0x61, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x53, 0x74, 0x61, 0x63, 0x6b, 0x74, 0x72, 0x61, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x8a, 0x01, 0x0a, 0x15, 0x55, 0x6e, 0x73, 0x79, 0x6d, 0x62,
	0x6f, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12,
	0x36, 0x2e, 0x70, 0x61, 0x72, 0x63, 0x61, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x73, 0x74, 0x6f, 0x72,
	0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x55, 0x6e, 0x73, 0x79, 0x6d,
	0x62, 0x6f, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x37, 0x2e, 0x70, 0x61, 0x72, 0x63, 0x61, 0x2e,
	0x6d, 0x65, 0x74, 0x61, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x31, 0x2e, 0x55, 0x6e, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x4c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x84, 0x01, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x6e, 0x65, 0x73, 0x12, 0x34, 0x2e, 0x70, 0x61, 0x72,
	0x63, 0x61, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x6e, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x35, 0x2e, 0x70, 0x61, 0x72, 0x63, 0x61, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x73, 0x74, 0x6f,
	0x72, 0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x6e, 0x65, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x66, 0x0a, 0x09, 0x4c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x2a, 0x2e, 0x70, 0x61, 0x72, 0x63, 0x61, 0x2e, 0x6d,
	0x65, 0x74, 0x61, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x70, 0x61, 0x72, 0x63, 0x61, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x73,
	0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x66, 0x0a, 0x09, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x2a,
	0x2e, 0x70, 0x61, 0x72, 0x63, 0x61, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x73, 0x74, 0x6f, 0x72, 0x65,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x70, 0x61, 0x72,
	0x63, 0x61, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x63, 0x0a, 0x08, 0x4d, 0x61, 0x70,
	0x70, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x29, 0x2e, 0x70, 0x61, 0x72, 0x63, 0x61, 0x2e, 0x6d, 0x65,
	0x74, 0x61, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31,
	0x2e, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x2a, 0x2e, 0x70, 0x61, 0x72, 0x63, 0x61, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x73, 0x74, 0x6f,
	0x72, 0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4d, 0x61, 0x70, 0x70,
	0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6c,
	0x0a, 0x0b, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x74, 0x72, 0x61, 0x63, 0x65, 0x73, 0x12, 0x2c, 0x2e,
	0x70, 0x61, 0x72, 0x63, 0x61, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x74, 0x72,
	0x61, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x70, 0x61,
	0x72, 0x63, 0x61, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x74, 0x72, 0x61, 0x63,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x60, 0x5a, 0x5e,
	0x62, 0x75, 0x66, 0x2e, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x67, 0x6f,
	0x2f, 0x70, 0x61, 0x72, 0x63, 0x61, 0x2d, 0x64, 0x65, 0x76, 0x2f, 0x70, 0x61, 0x72, 0x63, 0x61,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x73,
	0x2f, 0x67, 0x6f, 0x2f, 0x70, 0x61, 0x72, 0x63, 0x61, 0x2f, 0x6d, 0x65, 0x74, 0x61, 0x73, 0x74,
	0x6f, 0x72, 0x65, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x3b, 0x6d, 0x65, 0x74,
	0x61, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_parca_metastore_v1alpha1_metastore_proto_rawDescOnce sync.Once
	file_parca_metastore_v1alpha1_metastore_proto_rawDescData = file_parca_metastore_v1alpha1_metastore_proto_rawDesc
)

func file_parca_metastore_v1alpha1_metastore_proto_rawDescGZIP() []byte {
	file_parca_metastore_v1alpha1_metastore_proto_rawDescOnce.Do(func() {
		file_parca_metastore_v1alpha1_metastore_proto_rawDescData = protoimpl.X.CompressGZIP(file_parca_metastore_v1alpha1_metastore_proto_rawDescData)
	})
	return file_parca_metastore_v1alpha1_metastore_proto_rawDescData
}

var file_parca_metastore_v1alpha1_metastore_proto_msgTypes = make([]protoimpl.MessageInfo, 33)
var file_parca_metastore_v1alpha1_metastore_proto_goTypes = []interface{}{
	(*GetOrCreateMappingsRequest)(nil),     // 0: parca.metastore.v1alpha1.GetOrCreateMappingsRequest
	(*GetOrCreateMappingsResponse)(nil),    // 1: parca.metastore.v1alpha1.GetOrCreateMappingsResponse
	(*GetOrCreateFunctionsRequest)(nil),    // 2: parca.metastore.v1alpha1.GetOrCreateFunctionsRequest
	(*GetOrCreateFunctionsResponse)(nil),   // 3: parca.metastore.v1alpha1.GetOrCreateFunctionsResponse
	(*GetOrCreateLocationsRequest)(nil),    // 4: parca.metastore.v1alpha1.GetOrCreateLocationsRequest
	(*GetOrCreateLocationsResponse)(nil),   // 5: parca.metastore.v1alpha1.GetOrCreateLocationsResponse
	(*GetOrCreateStacktracesRequest)(nil),  // 6: parca.metastore.v1alpha1.GetOrCreateStacktracesRequest
	(*GetOrCreateStacktracesResponse)(nil), // 7: parca.metastore.v1alpha1.GetOrCreateStacktracesResponse
	(*UnsymbolizedLocationsRequest)(nil),   // 8: parca.metastore.v1alpha1.UnsymbolizedLocationsRequest
	(*UnsymbolizedLocationsResponse)(nil),  // 9: parca.metastore.v1alpha1.UnsymbolizedLocationsResponse
	(*CreateLocationLinesRequest)(nil),     // 10: parca.metastore.v1alpha1.CreateLocationLinesRequest
	(*CreateLocationLinesResponse)(nil),    // 11: parca.metastore.v1alpha1.CreateLocationLinesResponse
	(*StacktracesRequest)(nil),             // 12: parca.metastore.v1alpha1.StacktracesRequest
	(*StacktracesResponse)(nil),            // 13: parca.metastore.v1alpha1.StacktracesResponse
	(*LocationsRequest)(nil),               // 14: parca.metastore.v1alpha1.LocationsRequest
	(*LocationsResponse)(nil),              // 15: parca.metastore.v1alpha1.LocationsResponse
	(*LocationLinesRequest)(nil),           // 16: parca.metastore.v1alpha1.LocationLinesRequest
	(*FunctionsRequest)(nil),               // 17: parca.metastore.v1alpha1.FunctionsRequest
	(*FunctionsResponse)(nil),              // 18: parca.metastore.v1alpha1.FunctionsResponse
	(*MappingsRequest)(nil),                // 19: parca.metastore.v1alpha1.MappingsRequest
	(*MappingsResponse)(nil),               // 20: parca.metastore.v1alpha1.MappingsResponse
	(*Sample)(nil),                         // 21: parca.metastore.v1alpha1.Sample
	(*Stacktrace)(nil),                     // 22: parca.metastore.v1alpha1.Stacktrace
	(*SampleLabel)(nil),                    // 23: parca.metastore.v1alpha1.SampleLabel
	(*SampleNumLabel)(nil),                 // 24: parca.metastore.v1alpha1.SampleNumLabel
	(*SampleNumUnit)(nil),                  // 25: parca.metastore.v1alpha1.SampleNumUnit
	(*Location)(nil),                       // 26: parca.metastore.v1alpha1.Location
	(*Line)(nil),                           // 27: parca.metastore.v1alpha1.Line
	(*Function)(nil),                       // 28: parca.metastore.v1alpha1.Function
	(*Mapping)(nil),                        // 29: parca.metastore.v1alpha1.Mapping
	nil,                                    // 30: parca.metastore.v1alpha1.Sample.LabelsEntry
	nil,                                    // 31: parca.metastore.v1alpha1.Sample.NumLabelsEntry
	nil,                                    // 32: parca.metastore.v1alpha1.Sample.NumUnitsEntry
}
var file_parca_metastore_v1alpha1_metastore_proto_depIdxs = []int32{
	29, // 0: parca.metastore.v1alpha1.GetOrCreateMappingsRequest.mappings:type_name -> parca.metastore.v1alpha1.Mapping
	29, // 1: parca.metastore.v1alpha1.GetOrCreateMappingsResponse.mappings:type_name -> parca.metastore.v1alpha1.Mapping
	28, // 2: parca.metastore.v1alpha1.GetOrCreateFunctionsRequest.functions:type_name -> parca.metastore.v1alpha1.Function
	28, // 3: parca.metastore.v1alpha1.GetOrCreateFunctionsResponse.functions:type_name -> parca.metastore.v1alpha1.Function
	26, // 4: parca.metastore.v1alpha1.GetOrCreateLocationsRequest.locations:type_name -> parca.metastore.v1alpha1.Location
	26, // 5: parca.metastore.v1alpha1.GetOrCreateLocationsResponse.locations:type_name -> parca.metastore.v1alpha1.Location
	22, // 6: parca.metastore.v1alpha1.GetOrCreateStacktracesRequest.stacktraces:type_name -> parca.metastore.v1alpha1.Stacktrace
	22, // 7: parca.metastore.v1alpha1.GetOrCreateStacktracesResponse.stacktraces:type_name -> parca.metastore.v1alpha1.Stacktrace
	26, // 8: parca.metastore.v1alpha1.UnsymbolizedLocationsResponse.locations:type_name -> parca.metastore.v1alpha1.Location
	26, // 9: parca.metastore.v1alpha1.CreateLocationLinesRequest.locations:type_name -> parca.metastore.v1alpha1.Location
	22, // 10: parca.metastore.v1alpha1.StacktracesResponse.stacktraces:type_name -> parca.metastore.v1alpha1.Stacktrace
	26, // 11: parca.metastore.v1alpha1.LocationsResponse.locations:type_name -> parca.metastore.v1alpha1.Location
	28, // 12: parca.metastore.v1alpha1.FunctionsResponse.functions:type_name -> parca.metastore.v1alpha1.Function
	29, // 13: parca.metastore.v1alpha1.MappingsResponse.mappings:type_name -> parca.metastore.v1alpha1.Mapping
	30, // 14: parca.metastore.v1alpha1.Sample.labels:type_name -> parca.metastore.v1alpha1.Sample.LabelsEntry
	31, // 15: parca.metastore.v1alpha1.Sample.num_labels:type_name -> parca.metastore.v1alpha1.Sample.NumLabelsEntry
	32, // 16: parca.metastore.v1alpha1.Sample.num_units:type_name -> parca.metastore.v1alpha1.Sample.NumUnitsEntry
	27, // 17: parca.metastore.v1alpha1.Location.lines:type_name -> parca.metastore.v1alpha1.Line
	23, // 18: parca.metastore.v1alpha1.Sample.LabelsEntry.value:type_name -> parca.metastore.v1alpha1.SampleLabel
	24, // 19: parca.metastore.v1alpha1.Sample.NumLabelsEntry.value:type_name -> parca.metastore.v1alpha1.SampleNumLabel
	25, // 20: parca.metastore.v1alpha1.Sample.NumUnitsEntry.value:type_name -> parca.metastore.v1alpha1.SampleNumUnit
	0,  // 21: parca.metastore.v1alpha1.MetastoreService.GetOrCreateMappings:input_type -> parca.metastore.v1alpha1.GetOrCreateMappingsRequest
	2,  // 22: parca.metastore.v1alpha1.MetastoreService.GetOrCreateFunctions:input_type -> parca.metastore.v1alpha1.GetOrCreateFunctionsRequest
	4,  // 23: parca.metastore.v1alpha1.MetastoreService.GetOrCreateLocations:input_type -> parca.metastore.v1alpha1.GetOrCreateLocationsRequest
	6,  // 24: parca.metastore.v1alpha1.MetastoreService.GetOrCreateStacktraces:input_type -> parca.metastore.v1alpha1.GetOrCreateStacktracesRequest
	8,  // 25: parca.metastore.v1alpha1.MetastoreService.UnsymbolizedLocations:input_type -> parca.metastore.v1alpha1.UnsymbolizedLocationsRequest
	10, // 26: parca.metastore.v1alpha1.MetastoreService.CreateLocationLines:input_type -> parca.metastore.v1alpha1.CreateLocationLinesRequest
	14, // 27: parca.metastore.v1alpha1.MetastoreService.Locations:input_type -> parca.metastore.v1alpha1.LocationsRequest
	17, // 28: parca.metastore.v1alpha1.MetastoreService.Functions:input_type -> parca.metastore.v1alpha1.FunctionsRequest
	19, // 29: parca.metastore.v1alpha1.MetastoreService.Mappings:input_type -> parca.metastore.v1alpha1.MappingsRequest
	12, // 30: parca.metastore.v1alpha1.MetastoreService.Stacktraces:input_type -> parca.metastore.v1alpha1.StacktracesRequest
	1,  // 31: parca.metastore.v1alpha1.MetastoreService.GetOrCreateMappings:output_type -> parca.metastore.v1alpha1.GetOrCreateMappingsResponse
	3,  // 32: parca.metastore.v1alpha1.MetastoreService.GetOrCreateFunctions:output_type -> parca.metastore.v1alpha1.GetOrCreateFunctionsResponse
	5,  // 33: parca.metastore.v1alpha1.MetastoreService.GetOrCreateLocations:output_type -> parca.metastore.v1alpha1.GetOrCreateLocationsResponse
	7,  // 34: parca.metastore.v1alpha1.MetastoreService.GetOrCreateStacktraces:output_type -> parca.metastore.v1alpha1.GetOrCreateStacktracesResponse
	9,  // 35: parca.metastore.v1alpha1.MetastoreService.UnsymbolizedLocations:output_type -> parca.metastore.v1alpha1.UnsymbolizedLocationsResponse
	11, // 36: parca.metastore.v1alpha1.MetastoreService.CreateLocationLines:output_type -> parca.metastore.v1alpha1.CreateLocationLinesResponse
	15, // 37: parca.metastore.v1alpha1.MetastoreService.Locations:output_type -> parca.metastore.v1alpha1.LocationsResponse
	18, // 38: parca.metastore.v1alpha1.MetastoreService.Functions:output_type -> parca.metastore.v1alpha1.FunctionsResponse
	20, // 39: parca.metastore.v1alpha1.MetastoreService.Mappings:output_type -> parca.metastore.v1alpha1.MappingsResponse
	13, // 40: parca.metastore.v1alpha1.MetastoreService.Stacktraces:output_type -> parca.metastore.v1alpha1.StacktracesResponse
	31, // [31:41] is the sub-list for method output_type
	21, // [21:31] is the sub-list for method input_type
	21, // [21:21] is the sub-list for extension type_name
	21, // [21:21] is the sub-list for extension extendee
	0,  // [0:21] is the sub-list for field type_name
}

func init() { file_parca_metastore_v1alpha1_metastore_proto_init() }
func file_parca_metastore_v1alpha1_metastore_proto_init() {
	if File_parca_metastore_v1alpha1_metastore_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_parca_metastore_v1alpha1_metastore_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOrCreateMappingsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_parca_metastore_v1alpha1_metastore_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOrCreateMappingsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_parca_metastore_v1alpha1_metastore_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOrCreateFunctionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_parca_metastore_v1alpha1_metastore_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOrCreateFunctionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_parca_metastore_v1alpha1_metastore_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOrCreateLocationsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_parca_metastore_v1alpha1_metastore_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOrCreateLocationsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_parca_metastore_v1alpha1_metastore_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOrCreateStacktracesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_parca_metastore_v1alpha1_metastore_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOrCreateStacktracesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_parca_metastore_v1alpha1_metastore_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnsymbolizedLocationsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_parca_metastore_v1alpha1_metastore_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnsymbolizedLocationsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_parca_metastore_v1alpha1_metastore_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateLocationLinesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_parca_metastore_v1alpha1_metastore_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateLocationLinesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_parca_metastore_v1alpha1_metastore_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StacktracesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_parca_metastore_v1alpha1_metastore_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StacktracesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_parca_metastore_v1alpha1_metastore_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LocationsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_parca_metastore_v1alpha1_metastore_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LocationsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_parca_metastore_v1alpha1_metastore_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LocationLinesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_parca_metastore_v1alpha1_metastore_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FunctionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_parca_metastore_v1alpha1_metastore_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FunctionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_parca_metastore_v1alpha1_metastore_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MappingsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_parca_metastore_v1alpha1_metastore_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MappingsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_parca_metastore_v1alpha1_metastore_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Sample); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_parca_metastore_v1alpha1_metastore_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Stacktrace); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_parca_metastore_v1alpha1_metastore_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SampleLabel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_parca_metastore_v1alpha1_metastore_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SampleNumLabel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_parca_metastore_v1alpha1_metastore_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SampleNumUnit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_parca_metastore_v1alpha1_metastore_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Location); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_parca_metastore_v1alpha1_metastore_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Line); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_parca_metastore_v1alpha1_metastore_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Function); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_parca_metastore_v1alpha1_metastore_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Mapping); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_parca_metastore_v1alpha1_metastore_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   33,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_parca_metastore_v1alpha1_metastore_proto_goTypes,
		DependencyIndexes: file_parca_metastore_v1alpha1_metastore_proto_depIdxs,
		MessageInfos:      file_parca_metastore_v1alpha1_metastore_proto_msgTypes,
	}.Build()
	File_parca_metastore_v1alpha1_metastore_proto = out.File
	file_parca_metastore_v1alpha1_metastore_proto_rawDesc = nil
	file_parca_metastore_v1alpha1_metastore_proto_goTypes = nil
	file_parca_metastore_v1alpha1_metastore_proto_depIdxs = nil
}
